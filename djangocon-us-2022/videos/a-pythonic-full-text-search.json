{
    "description": "A **full-text search** on a website is the best way to make its **contents** easily accessible to **users** because it returns better results and is in fact used in *online search engines* or *social networks*.\n\nThe implementation of full-text search can be complex and many adopt the strategy of using **dedicated search engines** in addition to the **database**, but in most cases this strategy turns out to be a big problem of **architecture** and **performance**.\n\nIn this talk we'll see a **pythonic** way to implement full-text search on a website using only Django and PostgreSQL, taking advantage of all the **innovations** introduced in latest years, and we'll analyze the **problems** of using additional search engines with examples deriving from my experience (e.g. *djangopoject.com* or *readthedocs.org*).\n\nThrough this talk you can learn how to add a full-text search on your **website**, if it's based on **Django** and **PostgreSQL**, or you can learn how to update the search function of your website if you use other search engines.",
    "language": "eng",
    "recorded": "2022-10-19",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://2022.djangocon.us"
        }
    ],
    "speakers": [
        "Paolo Melchiorre"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/lnC9FUmQu7E/maxresdefault.jpg",
    "title": "A pythonic full-text search",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=lnC9FUmQu7E"
        }
    ]
}
