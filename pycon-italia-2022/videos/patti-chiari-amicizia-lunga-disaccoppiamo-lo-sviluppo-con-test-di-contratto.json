{
  "copyright_text": null,
  "description": "Patti chiari amicizia lunga. Come disaccoppiamo lo sviluppo tramite i test di contratto - PyCon Italia 2022\n\nFront-end, vi \u00e8 mai capitato che nonostante vi siate messi d\u2019accordo con il back-end l\u2019endpoint non vi espone qualcosa? Noi abbiamo risolto utilizzando il Contract testing, vi mostrer\u00f2 i vantaggi e alcuni casi reali di come scrivere un patto aiuta a rendere pi\u00f9 semplice lo sviluppo per tutti.\nQuando sono entrato in 20tab l\u2019azienda seguiva gi\u00e0 le metodologie Lean e Agile ed era composta principalmente da sviluppatori Python/Django. \nQuando abbiamo deciso di disaccoppiare i servizi (back-end in Django e front-end in React JS) siamo andati incontro a difficolt\u00e0 dovute ai differenti tempi di sviluppo o limiti tecnici.\nCome prima soluzione avevamo provato con alternare lo sviluppo dei due servizi prima iniziava il back-end, una volta completato partiva lo sviluppo front-end.\nQuesto ci rendeva inefficienti a volte i dati che arrivavano al front-end erano insufficienti o eccessivi rispetto all\u2019interfaccia che doveva costruire.\nQuindi abbiamo provato a dettagliare con maggior rigore tutti i requisiti tecnici necessari per partire in parallelo, ma lato front-end dovevamo sempre costruirci un server finto per procedere con lo sviluppo.\nIn questo ci \u00e8 venuto incontro il contract testing, entrambi i rappresentanti dei servizi si riuniscono prendono il design lo analizzano insieme e il front-end scrive un test di contratto dopo di che entrambi i servizi possono procedere con i rispettivi sviluppi in maniera svincolata tra di loro.\nIl front-end pu\u00f2 sfruttare il pact-stub-server per scrivere test funzionali con cypress e per lavorare senza neanche tirare su il servizio back-end.\nQuesto ha portato il front-end a riorganizzare il proprio template, ora abbiamo 3 tipi di test diversi, quelli unitari sui componenti, quelli funzionali con cypress e quelli di contratto con Pact JS. Tutti questi test tramite Docker vengono eseguiti nelle nostre pipeline e bloccano il nostro processo di deploy in caso di fallimento.\n\nSlide: \n\n\nSpeaker: Daniele Pompa",
  "duration": 1786,
  "language": "ita",
  "recorded": "2022-06-03",
  "speakers": [
    "Daniele Pompa"
  ],
  "tags": [
    "apis",
    "django",
    "docker",
    "javascript",
    "testing"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/uPNTrTZM_Y8/maxresdefault.jpg",
  "title": "Patti chiari, amicizia lunga. Disaccoppiamo lo sviluppo con test di contratto",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=uPNTrTZM_Y8"
    }
  ]
}