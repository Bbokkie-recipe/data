{
  "copyright_text": null,
  "description": "La Continuous Delivery \u00e8 una condizione mentale - PyCon Italia 2022\n\nIn questo talk racconter\u00f2 il mio percorso evolutivo da un approccio waterfall a quello iterativo passando per i tanti errori commessi. Mostrer\u00f2 come abbiamo realizzato un template che aiuta nel processo di Continuous Delivery utilizzando Kubernetes, Docker, Python e Terraform.\nVedo la gente passare i venerd\u00ec a fare rilasci in produzione e passare il weekend a fare bug fixing. Vedo la gente stufa di fare sempre le stesse attivit\u00e0 ripetitive e perseverare nella solita routine da developer frustrato. Ma tutto questo si pu\u00f2 evitare con un cambio di mentalit\u00e0. Quello che voglio raccontare in questo talk \u00e8 il mio percorso evolutivo da un approccio waterfall a quello iterativo passando per i tanti errori commessi. \n\nRacconter\u00f2 come abbiamo realizzato un template che aiuta nel processo di Continuous Delivery, dove la parola \u201ccontinuous\u201d \u00e8 quella che definisce bene l\u2019importanza di questo processo.\nNell\u2019Agile Software Development, il rilascio del software funzionante \u00e8 uno dei punti pi\u00f9 importanti e questo deve avvenire spesso.\nPer poter rilasciare nuove funzionalit\u00e0 per\u00f2, dovremo scrivere tutti i test necessari, eseguirli, creare una build e infine effettuare il deploy vero e proprio.\n\nNello sviluppo del software moderno la Continuous Delivery (CD)  \u00e8 quel processo che permette all'intero team di affrontare qualsiasi cambiamento, come nuove feature, bugfix o esperimenti, in un modo sostenibile, sicuro e rapido. In questo processo generalmente vengono utilizzate tra le altre cose, due pratiche per effettuare i rilasci continui: Continuous Integration (CI) e Continuous Deployment (CD). \n\nIn questo talk racconter\u00f2 come, insieme ai miei colleghi, siamo arrivati alla costruzione di un processo automatizzato per effettuare rilasci sin dal primo commit utilizzando Kubernetes, Docker, Python e Terraform per la creazione di applicazioni web basate su Django e React.\n\nSlide: \n\n\nSpeaker: Raffaele Colace",
  "duration": 1690,
  "language": "ita",
  "recorded": "2022-06-03",
  "speakers": [
    "Raffaele Colace"
  ],
  "tags": [
    "agile",
    "best practice",
    "case study",
    "devops",
    "django"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/CxWivBmSReo/maxresdefault.jpg",
  "title": "La Continuous Delivery \u00e8 una condizione mentale",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=CxWivBmSReo"
    }
  ]
}