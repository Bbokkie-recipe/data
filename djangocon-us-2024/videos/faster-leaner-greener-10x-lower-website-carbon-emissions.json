{
    "description": "We\u2019ll first look at a quantitative assessment of thousands of Django websites on the web, to get a good picture of the Django ecosystem\u2019s overall emissions, and understand which specific aspects of a project contribute to overall power and resource usage.\n\nWe\u2019ll then dive deeper on a single Django website\u2019s energy use, studying djangoproject.com specifically, as a good example of a high-traffic website with a big footprint. We\u2019ll use different performance testing, power measurement, and generic static analysis tools to understand how the site could be improved. We will review common issues, straightforward improvements, and more \u201cpie in the sky\u201d changes that are attainable with effort:\n\n- Energy consumption of front-end technology (React, HTMX, vanilla JS)\n- How design affects emissions (light vs. dark mode, image assets, fonts)\n- Application server: serverless Django options to reduce emissions\n- Database: how SQLite and other \"serverless\" database options can reduce emissions\n- Overlap with common Django performance considerations",
    "language": "eng",
    "recorded": "2024-09-24",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://2024.djangocon.us"
        },
        {
            "label": "Talk Webpage",
            "url": "https://2024.djangocon.us/talks/faster-leaner-greener-10x-lower-website-carbon-emissions/"
        }
    ],
    "speakers": [
        "Thibaud Colas"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/uC5lfegt4qQ/maxresdefault.jpg",
    "title": "Faster, leaner, greener: 10x lower website carbon emissions",
    "videos": [
        {
            "type": "youtube",
            "url": "https://youtu.be/uC5lfegt4qQ"
        }
    ]
}
