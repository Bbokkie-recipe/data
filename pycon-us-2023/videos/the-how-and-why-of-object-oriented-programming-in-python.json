{
    "copyright_text": "CC BY",
    "description": "Python supports multiple programming paradigms. You can write procedural\nprograms, use functional programming features, or use the full power\nobject-oriented programming.\n\nIn this tutorial you will learn how to get the most out of\nobject-oriented programming. After this tutorial you will able to:\n\n-  design you own objects\n-  take advantage of inheritance for code re-use\n-  implement special methods for pythonic objects\n-  convert programs from a procedural to a object-oriented approach\n\nThis tutorial is based on a small but comprehensive example. Starting\nfrom a procedural solution with lists and dictionaries, the tutorial\ngradually introduces how to create own objects to solve the same\nproblem. The next steps introduce the concepts of inheritance and\nspecial methods to take full advantage of object-oriented programming.\n",
    "language": "eng",
    "recorded": "2023-04-20",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://us.pycon.org/2023/"
        },
        {
            "label": "Presentation Webpage",
            "url": "https://us.pycon.org/2023/schedule/presentation/69/"
        }
    ],
    "speakers": [
        "Mike M\u00fcller"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/nTgKbiWg-YY/maxresdefault.jpg",
    "title": "The How and Why of Object-oriented Programming in Python",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=nTgKbiWg-YY"
        }
    ]
}