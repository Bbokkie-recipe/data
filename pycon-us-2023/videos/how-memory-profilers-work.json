{
    "copyright_text": "CC BY",
    "description": "These days, it is very easy for applications to run out of memory due to\nthe vast amounts of data they need to process. While Python makes it\nvery easy to get something up and running, the highly dynamic nature of\nthe language abstracts memory management away from us and makes it very\ndifficult to understand what is going on when we run out of memory or\nwhen we have memory leaks. This is where memory profilers come into\nplay.\n\nMemory profilers are tools that allow us to understand how our\napplications are using memory. Not only can they help us diagnose why\nour programs are using so much memory, but also they can also help us\noptimize our code to be faster by using smarter allocation patterns.\n\nBeing able to understand how to use memory profilers effectively is an\nessential skill for any Python developer, especially those working on\nprograms that involve the transformation of large amounts of data,\nlarge-scale applications, or long-running processes.\n\nThis talk will cover the basics of memory profilers, how they work, and\nhow to use them effectively. We will cover the different types of memory\nprofilers, the different kinds of allocations a Python program can\nperform, and how to use memory profilers effectively to understand what\nis going on in our programs.\n",
    "language": "eng",
    "recorded": "2023-04-22",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://us.pycon.org/2023/"
        },
        {
            "label": "Presentation Webpage",
            "url": "https://us.pycon.org/2023/schedule/presentation/91/"
        }
    ],
    "speakers": [
        "Pablo Galindo Salgado"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/mqu66lg79X8/maxresdefault.jpg",
    "title": "How memory profilers work",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=mqu66lg79X8"
        }
    ]
}