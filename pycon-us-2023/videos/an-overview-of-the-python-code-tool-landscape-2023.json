{
    "copyright_text": "CC BY",
    "description": "Linters, type checkers, style formatters, package linters, security\nanalysis, dead code removers, docstring formatters, code complexity\nanalyzers: There is a wealth of static code analysis tools in the Python\necosystem. It's intimidating to start looking at them and easy to get\nlost. What's the difference between Pyflakes, flake8, and autoflake? Or\nbetween autopep8 and pep8-naming? This overview explains the different\nkinds of static code analysis tools, what tools are out there (as of\n2023), and how beginners can get started using these tools to write code\nlike pros. This talk also provides a beginner's introduction to type\nhints in Python and the type checker tools available. There are too many\ntools to describe in detail, but this talk does introduce the promising\nnewcomer Ruff, an extremely fast Python linter written in Rust.\n",
    "language": "eng",
    "recorded": "2023-04-23",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://us.pycon.org/2023/"
        },
        {
            "label": "Presentation Webpage",
            "url": "https://us.pycon.org/2023/schedule/presentation/110/"
        }
    ],
    "speakers": [
        "Al Sweigart"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/knUGpULAmn4/maxresdefault.jpg",
    "title": "An Overview of the Python Code Tool Landscape 2023",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=knUGpULAmn4"
        }
    ]
}