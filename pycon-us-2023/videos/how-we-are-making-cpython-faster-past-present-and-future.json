{
    "copyright_text": "CC BY",
    "description": "Many of you will will have heard that Python 3.11 is considerably faster\nthan 3.10.\n\nHow did we do that? How are we going to make 3.12 and following releases\neven faster?\n\nIn this talk, I will present a high level overview of the approach we\nare taking to speeding up CPython.\n\nStarting with a simple overview of some basic principles, I will show\nhow we can apply those to streamline and speedup CPython.\n\nI will try to avoid computer science and software engineering\nterminology, in favor of diagrams, a few simple examples, and some\nhigh-school math.\n\nFinally, I make some estimates about how much faster the next few\nreleases of CPython will be, and how much faster Python could go.\n",
    "language": "eng",
    "recorded": "2023-04-22",
    "related_urls": [
        {
            "label": "Conference Website",
            "url": "https://us.pycon.org/2023/"
        },
        {
            "label": "Presentation Webpage",
            "url": "https://us.pycon.org/2023/schedule/presentation/73/"
        }
    ],
    "speakers": [
        "Mark Shannon"
    ],
    "thumbnail_url": "https://i.ytimg.com/vi/wyty6sFMWI0/maxresdefault.jpg",
    "title": "How we are making CPython faster. Past, present and future.",
    "videos": [
        {
            "type": "youtube",
            "url": "https://www.youtube.com/watch?v=wyty6sFMWI0"
        }
    ]
}